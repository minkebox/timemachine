{
  name: `TimeMachine Backups`,
  description: `Destination for your Apple TimeMachine backups`,
  image: `registry.minkebox.net/minkebox/timemachine`,
  tags: [ 'Backups' ],
  actions: [
    {
      type: `Header`,
      title: `User`
    },
    {
      type: `Text`,
      text: `Select the username and password needed for access. Leave this blank if you want anyone to have access.`
    },
    {
      type: `Environment`,
      name: `SAMBA_USERNAME`,
      description: `User's login name`,
      placeholder: `Guest`
    },
    {
      type: `Environment`,
      name: `SAMBA_PASSWORD`,
      description: `User's password`,
      placeholder: `Guest`
    },
    {
      type: `Header`,
      title: `Backup size`
    },
    {
      type: `Environment`,
      name: `MAXSIZE`,
      description: `Limit space available for backups (e.g. 50G, 5T)`
    },
    {
      type: `Header`,
      title: `Network`
    },
    {
      type: `Text`,
      text: `Select which network this application will use. You probably want <b>home</b> unless this application is being used on a private network.`
    },
    {
      type: `SelectNetwork`,
      name: `primary`,
      description: `Select network`
    }
  ],
  properties: [
    {
      type: `Environment`,
      name: `SAMBA_USERNAME`
    },
    {
      type: `Environment`,
      name: `SAMBA_PASSWORD`
    },
    {
      type: `Environment`,
      name: `MAXSIZE`
    },
    {
      type: `Port`,
      name: `0/tcp`,
      port: 0,
      protocol: `TCP`,
      nat: false,
      web: false,
      dns: false,
      mdns: {
        type: `_device-info._tcp`,
        txt: {
          model: `Xserve`
        }
      }
    },
    {
      type: `Port`,
      name: `9/tcp`,
      port: 9,
      protocol: `TCP`,
      nat: false,
      web: false,
      dns: false,
      mdns: {
        type: `_adisk._tcp`,
        txt: {
          waMa: `0`,
          sys: `adVF=0x100`,
          dk0: `adVF=0x82,adVN=TimeMachine`
        }
      }
    },
    {
      type: `Port`,
      name: `137/udp`,
      port: 137,
      protocol: `UDP`,
      nat: false,
      vpn: true,
      web: false,
      dns: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `138/udp`,
      port: 138,
      protocol: `UDP`,
      nat: false,
      vpn: true,
      web: false,
      dns: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `139/tcp`,
      port: 139,
      protocol: `TCP`,
      nat: false,
      vpn: true,
      web: false,
      dns: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `445/tcp`,
      port: 445,
      protocol: `TCP`,
      nat: false,
      vpn: true,
      web: false,
      dns: false,
      mdns: {
        type: `_smb._tcp`
      }
    },
    {
      type: `Directory`,
      name: `/backups`,
      style: `store`,
      shares: [
        {
          name: `/`,
          description: `Backups`
        }
      ]
    },
    {
      type: `Network`,
      name: `primary`,
      defaultValue: `home`
    }
  ],
  monitor: {
    cmd: `cd /backups;du -d0 *`,
    poll: 3600,
    parser: `
      const lines = input.split('\\n');

      const labels = [];
      const series = [];

      for (let i = 0; i < lines.length && lines[i]; i++) {
        const p = lines[i].split(/\\t+/);
        labels.push(p[1].split('.').slice(-2,1)[0]);
        series.push(parseInt(p[0]) / 1000000);
      }

      output.graph = {
        diskspace: {
          type: 'horizontalBar',
          data: {
            datasets: [{
              backgroundColor: props.colors,
              data: series
            }],
            labels: labels,
          },
          options: {
            maintainAspectRatio: false,
            adaptive: true,
            legend: { display: false },
            title: { display: true, text: 'Backup Usage (GB)' },
            scales: {
              xAxes: [{
                ticks: {
                  precision: 2,
                  beginAtZero: true
                }
              }]
            }
          }
        }
      };
    `,
    minwidth: '400px',
    template: `{{{graph.diskspace}}}`
  }
}
